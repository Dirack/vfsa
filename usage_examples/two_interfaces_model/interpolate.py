#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# interpolate.py  (Python)
#
# Purpose: Interpolate the points of the interfaces in the model.
#
# Site: https://dirack.github.io
# 
# Version 1.0
#
# Programer: Rodolfo A. C. Neves (Dirack) 21/03/2020
#
# Email: rodolfo_profissional@hotmail.com
#
# License: GPL-3.0 <https://www.gnu.org/licenses/gpl-3.0.txt>.

import pandas as pd
import numpy as np

def media(lista):
	
	for j in range(3):
		for i in range(len(lista)-5):
			lista[i+2] = (lista[i]+lista[i+1]+lista[i+2]+lista[i+3]+lista[i+4])/5

	return lista
	

# Define interfaces to interpolate
xedge=[]
xedge.append([0.00,1.00,2.00,4.00,7.50,10.0,12.5,20.0,25.0,32.0,36.0,44.0,54.0,60.0])
xedge.append([0.00,3.96,8.84,11.4,15.1,17.4,19.8,23.4,29.7,33.8,38.5,42.1,46.3,51.4,54.6,60.0])
xedge.append([0.00,1.26,3.20,7.57,9.51,12.4,15.6,16.7,17.8,19.4,23.2,25.9,29.0,31.6,33.7,35.0,36.7,37.8,40.7,42.4,45.4,47.5,51.4,53.8,55.7,60.0]) 
xedge.append([0.00,0.842,2.10,2.95,3.79,4.33,5.22,5.89,6.44,7.45,8.42,9.42,10.5,13.9,14.7,15.5,16.1,16.6,17.8,18.5,19.1,19.3,19.7,20.3,21.2,22.5,23.6,24.6,26.1,27.6,28.5,30.9,33.2,34.6,35.6,37.3,38.9,40.1,41.2,42.5,44.0,45.7,46.6,48.2,49.3,49.9,50.9,52.2,55.2,56.3,58.1,60.0])
xedge.append([0.00,0.842,2.10,2.95,3.79,4.33,5.22,5.89,6.44,7.45,8.42,9.42,10.5,13.9,14.7,15.5,16.1,16.6,17.8,18.5,19.1,19.3,19.7,20.3,21.2,22.5,23.6,24.6,26.1,27.6,28.5,30.9,33.2,34.6,35.6,37.3,38.9,40.1,41.2,42.5,44.0,45.7,46.6,48.2,49.3,49.9,50.9,52.2,55.2,56.3,58.1,60.0])
xedge.append([0.00,0.842,2.10,2.95,3.79,4.33,5.22,5.89,6.44,7.45,8.42,9.42,10.5,13.9,14.7,15.5,16.1,16.6,17.8,18.5,19.1,19.3,19.7,20.3,21.2,22.5,23.6,24.6,26.1,27.6,28.5,30.9,33.2,34.6,35.6,37.3,38.9,40.1,41.2,42.5,44.0,45.7,46.6,48.2,49.3,49.9,50.9,52.2,55.2,56.3,58.1,60.0])
xedge.append([0.00,0.842,3.45,6.90,10.6,14.2,17.2,20.8,23.6,25.8,27.1,29.7,35.9,38.8,44.9,50.6,60.0])
xedge.append([0.00,3.11,5.22,6.98,9.09,13.2,16.0,20.5,21.0,23.2,24.9,25.4,28.4,32.5,37.5,42.8,43.5,48.2,54.8,60.0])
xedge.append([0.00,5.47,13.4,17.6,22.1,22.9,25.0,26.7,27.3,32.7,38.6,40.3,47.6,60.0])

zedge=[]
zedge.append([1.65,1.67,1.69,1.70,1.73,1.80,1.86,1.76,2.00,2.14,2.03,2.12,2.06,2.04])
zedge.append([2.26,2.30,2.54,2.56,2.34,2.47,2.30,2.45,2.56,2.50,2.50,2.58,2.76,2.52,2.41,2.34])
zedge.append([2.58,2.49,2.54,3.73,3.95,3.67,2.71,2.63,2.69,2.62,3.23,3.32,3.58,3.56,3.23,2.95,2.88,2.91,2.76,2.88,3.15,3.15,2.73,2.54,2.52,2.47])
zedge.append([2.79,2.64,2.62,2.80,3.17,3.23,3.66,4.44,5.02,5.44,5.66,5.75,5.58,4.10,3.48,3.06,2.78,2.76,2.95,2.86,2.84,3.15,3.68,4.22,4.77,5.22,5.57,5.64,5.47,5.55,5.49,4.91,3.71,3.26,3.02,3.09,3.03,2.93,3.35,4.18,4.37,4.72,4.77,4.25,3.82,3.76,3.87,3.81,2.94,2.71,2.71,2.80])
zedge.append([2.79,2.64,2.62,2.80,3.17,3.23,3.66,4.44,4.73,5.18,5.36,5.46,5.23,4.10,3.48,3.06,2.78,2.76,2.95,2.86,2.84,3.15,3.68,4.22,4.77,5.01,5.29,5.40,5.20,5.29,5.20,4.91,3.71,3.26,3.02,3.09,3.03,2.93,3.35,3.56,3.86,4.15,4.20,3.77,3.50,3.53,3.49,3.34,2.94,2.71,2.71,2.80])
zedge.append([2.79,2.64,2.62,2.80,3.17,3.23,3.66,4.05,4.49,4.88,5.09,5.19,4.95,3.77,3.48,3.06,2.78,2.76,2.95,2.86,2.84,3.15,3.68,3.94,4.13,4.54,4.81,4.91,4.78,4.84,4.75,4.28,3.71,3.26,3.02,3.09,3.03,2.93,3.35,4.18,4.37,4.72,4.77,4.25,3.82,3.76,3.87,3.81,2.94,2.71,2.71,2.80])
zedge.append([6.49,6.46,6.42,6.07,6.01,5.84,5.90,5.68,5.86,5.58,5.64,5.81,5.86,5.92,5.70,5.73,5.86])
zedge.append([7.11,7.05,6.75,6.75,6.70,6.36,6.42,6.35,6.31,6.36,6.40,6.47,6.57,6.72,7.01,6.86,6.60,6.46,6.59,6.59])
zedge.append([8.42,7.94,7.38,7.33,7.37,7.39,7.40,7.40,7.45,7.60,7.80,8.07,7.83,7.44])

# Regularize and interpolate
for j in range(len(zedge)):
	xedge[j] = map(lambda i: round(i,1),xedge[j])
	zedge[j] = map(lambda i: round(i,1),zedge[j])


xmax = 60
xmin = 0
dx = 0.0001
ox = xmin
nx = int(xmax/dx)+1
x=map(lambda i: round(ox + dx * i,1), range(nx))
#zedgeMean = mean(zedge)
z=[]
interfaces = []
f = open('layers.asc','w')	
for j in range(len(zedge)):

	for i in range(nx):

		if(x[i] in xedge[j]):
			z.append(zedge[j][xedge[j].index(x[i])])
		else:
			z.append(np.nan)

	series = pd.Series(z,x)
	interpolated = series.interpolate(method='linear')
	series = pd.Series(media(interpolated.tolist()),x)
	interpolated = series.interpolate(method='spline',order=2)
	interfaces = map(lambda i: str(round(i,3)),media(interpolated.tolist()))
	z=[]
	f.write(" ".join(interfaces))

f.write(" n1="+str(nx)+" n2="+str(len(zedge))+" o1="+str(ox)+" d1="+str(dx)+" data_format=ascii_float  in=layers.asc")

f.close()


