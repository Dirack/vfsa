#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# SConstruct  (Madagascar Script)
#
# Purpose: Obtain zero offset CRS parameters using VFSA 
# for a two interfaces model.
#
# Site: https://dirack.github.io
# 
# Version 1.0
#
# Programer: Rodolfo A. C. Neves (Dirack) 21/03/2020
#
# Email: rodolfo_profissional@hotmail.com
#
# License: GPL-3.0 <https://www.gnu.org/licenses/gpl-3.0.txt>.

from rsf.proj import *

xmin=0
xmax=60
zmax=10
zmin=0

velocities = (1.508,
              1.581,
              1.690,
              1.826,
              2.000,
	      2.010,
	      2.050,2.1,2.4,2.8,3.0)

def arr2str(array,sep=' '):
    return string.join(map(str,array),sep)

vstr = arr2str(velocities,',')

Flow('layers','layers.asc','dd form=native')

d = 0.01 # non-round for reproducibility

Flow('refs','layers',
	'''
	spline o1=0 d1=%g n1=%d
	''' % (d,int(1.5+xmax/d)))
Flow('dips','refs','deriv scale=y')

Flow('mod1','refs dips',
     '''
	domf nw=3 dip=${SOURCES[1]} |
     unif2 d1=%g n1=%d v00=%s
     ''' % (d,int(zmax/d),vstr))

Result('mod1',
       '''
       grey color=j title="Model 1"
       mean=y titlesz=8 labelsz=6
       label1="Depth (km)"
       label2="Distance (km)"
       ''' )

Flow('mod2','mod1',
	'''
	smooth rect1=10 rect2=10 repeat=2
	''')
Result('mod2',
       '''
       grey color=j title="Model smooth"
       mean=y titlesz=8 labelsz=6
       label1="Depth (km)"
       label2="Distance (km)"
       ''' )

##################################
# Set up sources and receivers 
##################################

Flow('rz','mod2','window n1=1 | math output=1')
Flow('rx','mod2','window n1=1 | math output=x1')
Flow('rxz','rx rz','cat axis=2 ${SOURCES[1]} | transp') 

Flow('sz','mod2','window n1=1 j2=20 | math output=1')
Flow('sx','mod2','window n1=1 j2=20 | math output=x1')
Flow('sy','mod2','window n1=1 j2=20 | math output=1')
Flow('sxz',['sx','sz','sy'],
     '''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} ${SOURCES[2]} | transp
     ''', stdin=0)

Flow('wavelet',None,
     '''
     spike nsp=1 n1=5000 d1=0.001 k1=201 |
     ricker1 frequency=10 | transp  
     ''' )

z=1
ns=4

#################################
# Modeling 
#################################

for i in range(ns):
    x=0.54*(i+1)*15
    sourcexz='sxz'+str(x)
    Flow(sourcexz,None,
         'spike n1=3 nsp=3 k1=1,2,3 mag=%g,%g,1' % (x,z))

    datax='data'+str((i+1)*15)
    wfl='wfl'+str((i+1)*15)
    snap='snap'+str((i+1)*15)
   
    Flow([datax,wfl],['wavelet','mod1','mod1',sourcexz,'rxz'],
         '''
         awefd2d
         ompchunk=1 ompnth=0 
         verb=y snap=y jsnap=100
         nb=0
         vel=${SOURCES[1]}
         den=${SOURCES[2]}
         sou=${SOURCES[3]}
         rec=${SOURCES[4]}
         wfl=${TARGETS[1]}
         free=n dens=n snap=y expl=y
         ''')

#################################
# Display shot gather and snapshot
#################################    

for i in range(ns):
    dataview='data'+str((i+1)*15)
    Result(dataview,
           '''
           window j2=5 |
           transp |
           grey title="Shot gather xs=%2.1f (km)"
           gainpanel=all 
           label1=Time unit1=s label2=Position unit2=km
           ''' % ((i+1)*15*0.54) )

for i in range(ns):
    wfl='wfl'+str((i+1)*15)    
    datasnap='snap'+str((i+1)*15)
    Result(datasnap,wfl,
           '''
           window n3=1 f3=25 |
           grey gainpanel=all title=Snapshot\ Time=2.5s
           label1=Deep unit1=km label2=Distance unit2=km gpow=2
           ''')

for i in range(5):
    shotsnap='snap45-'+str(i+1)
    Result(shotsnap,'wfl45',
           '''
           window n3=1 f3=%d |
           grey pclip=99.9 title="Snapshot Time=%2.1f (s)"
           screenratio=%g screenht=5
           label1=Depth unit1=km label2=Distance unit2=km
           ''' % ((5+i*10),(5+i*10)*0.1,(zmax/xmax)))



End()
