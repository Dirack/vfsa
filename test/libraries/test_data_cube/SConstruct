#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# SConstruct  (Madagascar Script)
#
# Purpose: Generate data for tests.
#
# Site: https://www.geofisicando.com
# 
# Programmer: Rodolfo A. C. Neves (Dirack) 09/01/2020
#
# Email: rodolfo_profissional@hotmail.com
#
# License: GPL-3.0 <https://www.gnu.org/licenses/gpl-3.0.txt>.

# Madagascar library
from rsf.proj import *

# Python math library
import math

from rsf.recipes.kimodel import multiLayerModelBuild as mlmod
from rsf.recipes.kimodel import kirchhoffNewtonModeling as kinewmod
from rsf.recipes.kimodel import arr2str

# Modeling: Gaussian reflector in a velocity linear model
# velocity increases with depth and a 0.5 velocity gradient
Flow('gaussianReflector',None,
     '''
     math d1=0.01 n1=2001 o1=-5 unit1=km label1=Offset
     output="4-3*exp(-(x1-5)^2/9)"
     ''')

# Velocity Model
Flow('velocityModel','gaussianReflector',
     '''
     window min1=0 max1=10 |
     spray axis=1 n=451 d=0.01 o=0 label=Depth unit=km |
     math output="1.5+0.5*x1+0.0*x2"
     ''')

Flow('reflectorDip','gaussianReflector','math output="2/3*(x1-5)*input" ')

# Kirchoff Modeling
Flow('dataCube','gaussianReflector reflectorDip',
     '''
     kirmod cmp=y dip=${SOURCES[1]} 
     nh=161 dh=0.025 h0=0
     ns=401 ds=0.025 s0=0
     freq=10 dt=0.004 nt=1001
     vel=1.5 gradz=0.5 gradx=0.0 verb=y |
     put d2=0.0125 label3="CMP" unit3="Km" label2="Offset" unit2="Km" label1=Time unit1=s
     ''')

# Original velocity model
xmax = 6.0
zmax = 5.0

layers = ((1.00,1.00,1.00,1.00),
          (1.50,1.50,1.50,1.50))

velocities = (2.0,
              2.5,
              4.0)

# Generate multi layer model
mlmod(interfaces='interfaces',
        dipsfile='interfacesDip',
        modelfile='simpleModel',
        xmax=xmax,
        zmax=zmax,
        layers=layers,
        velocities=velocities)

# Generate a modeled data cube
nt=1001
dt=0.004
nm=241
dm=0.025
nh=161
dh=0.025

kinewmod(reflectors='interfaces',
        reflectorsDip='interfacesDip',
        filename='simpleDataCube',
        velocities=velocities,
        nt=nt,
        dt=dt,
        ns=nm,
        ds=dm,
        nh=nh,
        dh=dh)

om0=2
dm0=0.1
nm0=10
ot0=1.
dt0=0.05
nt0=1
v0=2.

# Parameters files to test varlim flag
Flow('rnmax',None,'spike n1=25 d1=1 o1=0 mag=10 | put n1=5 n2=5')
Flow('rnmin',None,'spike n1=25 d1=1 o1=0 mag=0 | put n1=5 n2=5')
Flow('rnipmax',None,'spike n1=25 d1=1 o1=0 mag=3 | put n1=5 n2=5')
Flow('rnipmin',None,'spike n1=25 d1=1 o1=0 mag=1 | put n1=5 n2=5')
Flow('betamax',None,'spike n1=25 d1=1 o1=0 mag=1 | put n1=5 n2=5')
Flow('betamin',None,'spike n1=25 d1=1 o1=0 mag=-1 | put n1=5 n2=5')

End()
