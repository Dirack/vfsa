name:   Deploy

on:
        push:
                branches:
                        - "master"
                tags:
                        - "v*"
jobs:
        build:
                runs-on: ubuntu-latest
                steps:
                        - name: Repository checkout
                          uses: actions/checkout@v3
                          with:
                                fetch-depth: 0

                        - name: Set up Docker Buildx
                          uses: docker/setup-buildx-action@v1

                        - name: Build and push
                          uses: docker/build-push-action@v2
                          with:
                                context: .
                                file: ./infra/docker/Dockerfile
                                tags: testimage:0.1.0
                                outputs: type=docker,dest=/tmp/testimage.tar

                        - name: Upload artifact
                          uses: actions/upload-artifact@v2
                          with:
                                name: testimage
                                path: /tmp/testimage.tar
                                retention-days: 0

        test:
                runs-on: ubuntu-latest
                needs: build
                steps:
                        - name: Set up Docker Buildx
                          uses: docker/setup-buildx-action@v1
                        - name: Download artifact
                          uses: actions/download-artifact@v2
                          with:
                                name: testimage
                                path: /tmp
                        - name: Load Docker image
                          run: |
                               docker load --input /tmp/testimage.tar

                        - name: Run unit tests
                          run: docker run -t testimage:0.1.0 bash -c "cd /home/tryitondocker/madagascar-3.0/user/vfsa && make -C test TESTS=libraries"

                        - name: Run optimization tests
                          run: docker run -t testimage:0.1.0 bash -c "cd /home/tryitondocker/madagascar-3.0/user/vfsa && make -C test TESTS=optimization"

        deploy:
                runs-on: ubuntu-latest
                needs: test
                steps:
                        - name: Set up Docker Buildx
                          uses: docker/setup-buildx-action@v1
                        - name: Download artifact
                          uses: actions/download-artifact@v2
                          with:
                                name: testimage
                                path: /tmp
                        - name: Load Docker image
                          run: |
                               docker load --input /tmp/testimage.tar
                               docker image ls -a
                        - name: Check version
                          run: docker run -t testimage:0.1.0 bash -c "cd /home/tryitondocker/madagascar-3.0/user/vfsa && ./infra/scripts/version_check.sh"
                        - name: Generate a changelog
                          run: docker run -t testimage:0.1.0 bash -c "cd /home/tryitondocker/madagascar-3.0/user/vfsa && ./infra/scripts/prepare_release_msg.sh" >> ./changelog.md
                        - name: Upload changelog artifact
                          uses: actions/upload-artifact@v2
                          with:
                                name: changelog
                                path: ./changelog.md
                                retention-days: 0
                        - name: Create Release
                          id: create_release
                          uses: actions/create-release@v1
                          env:
                                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
                          with:
                                tag_name: ${{ github.ref }}
                                release_name: ${{ github.ref }}
                                body_path: ./changelog.md
                                draft: true
                                prerelease: true
